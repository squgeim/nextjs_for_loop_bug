import type { GetServerSideProps, NextPage } from 'next'
import Head from 'next/head'
import { useState } from 'react';

const countries: Country[] = [
    {
        code: 'usd',
    },
    {
        code: 'npr'
    },
    {
        code: 'cad'
    }
];

type Country = {
    code: string;
};

type Exchange = Record<string, number>;

const fetchExchanges = async (countries: Country[]) => {
    const promises: Promise<[string, Exchange]>[] = [];

    for (const { code } of countries) {
        const p = fetch(`https://cdn.jsdelivr.net/gh/fawazahmed0/currency-api@1/latest/currencies/${code}.json`)
            .then(res => res.json())
            .then(data => data[code])
            .then(data => [code, data] as [string, Exchange]);
        promises.push(p);
    }

    const data = await Promise.all(promises);

    return Object.fromEntries(data);
}

export const getServerSideProps: GetServerSideProps = async () => {
  const currencies = await fetchExchanges(countries);

  return {
    props: {
      currencies,
    }
  };
}

const Home: NextPage<{ currencies: Record<string, Exchange> }> = (props) => {
  const [currencies, setCurrencies] = useState<Record<string, Exchange>>(() => props.currencies);

  const fetchClientSide = () => {
    fetchExchanges(countries).then(setCurrencies);
  };

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <button onClick={() => fetchClientSide()}>Fetch client side</button>
        {Object.entries(currencies).map(([code, exg]) =>
          <details key={code}>
            <summary>{code}</summary>
            <pre>{JSON.stringify(exg, null, 2)}</pre>
          </details>
        )}
      </main>
    </div>
  )
}

export default Home
